[{"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\store.js":"1","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\product\\actionType.js":"2","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\product\\actionCreator.js":"3","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\product\\reducer.js":"4","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\rootReducer.js":"5","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\ProductScreen.js":"6","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\SearchBox.js":"8","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Header.js":"9","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\App.js":"10","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\index.js":"11","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\CartScreen.js":"12","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\PaymentScreen.js":"13","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\LoginScreen.js":"14","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\order\\actionCreator.js":"15","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Pagination.js":"16","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\ProductList.js":"17","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Carousel.js":"18","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Meta.js":"19","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\cart\\reducer.js":"20","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\cart\\actionCreator.js":"21","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\ShippingScreen.js":"22","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\OrderScreen.js":"23","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\order\\reducer.js":"24","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\PlaceOrderScreen.js":"25"},{"size":1148,"mtime":1607886399284,"results":"26","hashOfConfig":"27"},{"size":1276,"mtime":1608368351558,"results":"28","hashOfConfig":"27"},{"size":6703,"mtime":1608373362274,"results":"29","hashOfConfig":"27"},{"size":6426,"mtime":1608368613422,"results":"30","hashOfConfig":"27"},{"size":1040,"mtime":1608368660179,"results":"31","hashOfConfig":"27"},{"size":9478,"mtime":1608372868174,"results":"32","hashOfConfig":"27"},{"size":1696,"mtime":1608372749672,"results":"33","hashOfConfig":"27"},{"size":1007,"mtime":1608375108668,"results":"34","hashOfConfig":"27"},{"size":3716,"mtime":1608374813168,"results":"35","hashOfConfig":"27"},{"size":2628,"mtime":1608360082625,"results":"36","hashOfConfig":"27"},{"size":828,"mtime":1607924906312,"results":"37","hashOfConfig":"27"},{"size":5291,"mtime":1607879179222,"results":"38","hashOfConfig":"27"},{"size":1832,"mtime":1607886710750,"results":"39","hashOfConfig":"27"},{"size":2500,"mtime":1608373053176,"results":"40","hashOfConfig":"27"},{"size":5462,"mtime":1608373279087,"results":"41","hashOfConfig":"27"},{"size":798,"mtime":1608361533927,"results":"42","hashOfConfig":"27"},{"size":3788,"mtime":1608362889394,"results":"43","hashOfConfig":"27"},{"size":1326,"mtime":1608371229992,"results":"44","hashOfConfig":"27"},{"size":508,"mtime":1608372714061,"results":"45","hashOfConfig":"27"},{"size":1275,"mtime":1608373140472,"results":"46","hashOfConfig":"27"},{"size":1625,"mtime":1608373198248,"results":"47","hashOfConfig":"27"},{"size":2548,"mtime":1608373596356,"results":"48","hashOfConfig":"27"},{"size":9944,"mtime":1608374607621,"results":"49","hashOfConfig":"27"},{"size":4684,"mtime":1608374200559,"results":"50","hashOfConfig":"27"},{"size":6501,"mtime":1608377171700,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"5s2t2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\store.js",[],["105","106"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\product\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\product\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\product\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Header.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\App.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\index.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\order\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Pagination.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\ProductList.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Carousel.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\cart\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\cart\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\ShippingScreen.js",["107"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport {Form, Button } from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { addShippingAddress } from '../redux/cart/actionCreator'\r\nimport CheckoutStep from '../components/CheckoutStep';\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cartReducer = useSelector(state => state.cartReducer)\r\n    const { shippingAddress } = cartReducer;\r\n\r\n    const [address, setAddress] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [postalCode, setPostalCode] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(addShippingAddress({ address, city, postalCode, country}));\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n            <FormContainer>\r\n                <CheckoutStep step1 step2 />\r\n                <h1>Shipping address</h1>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"address\" value={address} onChange={e=> setAddress(e.target.value)} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"city\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"city\" value={city} onChange={e=> setCity(e.target.value)} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"postalCode\">\r\n                        <Form.Label>Postal Code</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"postal code\" value={postalCode} onChange={e=> setPostalCode(e.target.value)} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"country\">\r\n                        <Form.Label>Country</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"country\" value={country} onChange={e=> setCountry(e.target.value)} required></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"dark\" onClick={handleSubmit}>\r\n                        Continue\r\n                    </Button>\r\n                </Form>\r\n            </FormContainer>\r\n        )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\OrderScreen.js",["108"],"import React, {useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {  Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { orderDetail , orderUpdateToPaid,  orderUpdateToDeliver,} from '../redux/order/actionCreator';\r\nimport Axios from 'axios';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nconst OrderScreen = ({ match , history}) => {\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const orderId = match.params.id;\r\n    \r\n\r\n    const orderDetailReducer = useSelector(state => state.orderDetailReducer)\r\n    const { order, isLoading, errorMessage} = orderDetailReducer;\r\n    \r\n    const orderPayReducer = useSelector(state => state.orderPayReducer)\r\n    const userReducer = useSelector(state => state.userReducer);\r\n    const orderDeliverReducer = useSelector(state => state.orderDeliverReducer);\r\n\r\n    const { isLoading: isLoadingPay, success,} = orderPayReducer  \r\n    const { isLoading: loadingDeliver} = orderDeliverReducer;\r\n    const { currentUser } = userReducer;\r\n    useEffect(() => {\r\n            const addPayPalScript = async () => {\r\n                const { data: clientId } = await Axios.get('/api/config/paypal')\r\n                const script = document.createElement('script')\r\n                script.type = 'text/javascript'\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n                script.async = true\r\n                script.onload = () => {\r\n                setSdkReady(true)\r\n                }\r\n                script.onerror = () => {\r\n                    throw new Error('Paypal SDK could not be loaded.');\r\n                  };\r\n                  document.body.appendChild(script);\r\n            }\r\n            if(orderId) {\r\n                dispatch(orderDetail(orderId));\r\n            } else if(!order.isPaid) {\r\n                if (window !== undefined && window.paypal === undefined) {\r\n                    addPayPalScript();\r\n                } else if (\r\n                    window !== undefined &&\r\n                    window.paypal !== undefined\r\n                ) {\r\n                    sdkReady(true)\r\n                }\r\n            }  \r\n        \r\n    }, [dispatch, orderId, success,])\r\n\r\n    const successPayHandler = (paymentResult) => {\r\n        dispatch(orderUpdateToPaid(orderId, paymentResult))\r\n    }\r\n    const deliverHandler = () => {\r\n            dispatch(orderUpdateToDeliver(orderId))\r\n            setTimeout(() => {\r\n                history.push('/admin/orderlist')\r\n            }, 1000);;\r\n    }\r\n    return isLoading ? <Loader /> : errorMessage ? <Message text={errorMessage} />\r\n        : <>\r\n                <h1>Order Id: {order._id}</h1>\r\n                <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>\r\n                                    Name: {order.user.name.toUpperCase()} \r\n                                </strong>\r\n                            </p>\r\n                            <p>\r\n                                <strong>\r\n                                    Email:  \r\n                                </strong>\r\n                                <a href={`mailto:${order.user.email}`} className=\"text-dark text-decoration-none\" > {order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                \r\n                                    {order.shippingAddress['address']},{order.shippingAddress.city},\r\n                                    {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            <div>\r\n                                \r\n                                { order.isDelivered ? <Message text={`Deliver on ${order.deliveredAt} `} color=\"#42ba96\"/> \r\n                                : <Message text=\"Not Delivered\" />}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <div>\r\n                                <strong>Method: </strong>\r\n                                {\r\n                                    order.paymentMethod\r\n                                }\r\n                                { order.isPaid ? <Message text={`Paid on ${order.paidAt} `} color=\"#42ba96\"  /> \r\n                                : <Message text=\"Not paid\" />}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {\r\n                                order.orderItems.length === 0 ? <Message text=\"Your cart is empty\" />\r\n                                : <ListGroup variant=\"flush\">\r\n                                        {order.orderItems.map((item, index) => <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link className=\"text-secondary text-decoration-none\"  to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} * $ {item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>)}\r\n                                </ListGroup>\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>    \r\n                <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                \r\n                                    { !order.isPaid && (\r\n                                            <ListGroup.Item>\r\n                                               {\r\n                                                   isLoadingPay && <Loader />\r\n                                               }\r\n                                               {\r\n                                                   sdkReady ? <Loader /> : <PayPalButton amount={order.totalPrice}\r\n                                                    onSuccess={successPayHandler}\r\n                                                   />\r\n                                               }\r\n                                            </ListGroup.Item>\r\n                                    )}\r\n                                    {loadingDeliver && <Loader />}\r\n                                                { currentUser && currentUser.isAdmin && !order.isDelivered ? (\r\n                                                    <ListGroup.Item>\r\n                                                    <Button\r\n                                                    type='button'\r\n                                                    className='btn btn-block'\r\n                                                    variant=\"dark\"\r\n                                                    onClick={deliverHandler}\r\n                                                    >\r\n                                                    Mark As Delivered\r\n                                                    </Button>\r\n                                                </ListGroup.Item>\r\n                                    ): null}\r\n                            </ListGroup>\r\n                        </Card>\r\n                </Col>\r\n            </Row>           \r\n        </>\r\n}\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\redux\\order\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Mobcart\\frontend\\src\\screens\\PlaceOrderScreen.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":13,"nodeType":"115","messageId":"116","endLine":10,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":55,"column":8,"nodeType":"119","endLine":55,"endColumn":37,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'shippingAddress' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'order.isPaid' and 'sdkReady'. Either include them or remove the dependency array.","ArrayExpression",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [dispatch, order.isPaid, orderId, sdkReady, success]",{"range":"126","text":"127"},[2396,2425],"[dispatch, order.isPaid, orderId, sdkReady, success]"]